# Generated by Django 4.2.20 on 2025-04-18 04:14

from django.db import migrations
from django.utils import timezone
from django.contrib.auth.hashers import make_password

def create_admin_users(apps, schema_editor):
    User = apps.get_model('users', 'User')
    
    # Create superadmin if it doesn't exist
    if not User.objects.filter(email='superadmin@linkly.com').exists():
        User.objects.create(
            username='superadmin',
            email='superadmin@linkly.com',
            password=make_password('Linkly@2024!'),
            is_staff=True,
            is_superuser=True,
            is_active=True,
            date_joined=timezone.now()
        )
    
    # Create admin if it doesn't exist
    if not User.objects.filter(email='admin@linkly.com').exists():
        User.objects.create(
            username='admin',
            email='admin@linkly.com',
            password=make_password('Admin@2024!'),
            is_staff=True,
            is_active=True,
            date_joined=timezone.now()
        )

def reverse_admin_users(apps, schema_editor):
    User = apps.get_model('users', 'User')
    User.objects.filter(email__in=['superadmin@linkly.com', 'admin@linkly.com']).delete()

class Migration(migrations.Migration):

    dependencies = [
        ('users', '0003_create_subscription_plans'),
    ]

    operations = [
        migrations.RunPython(create_admin_users, reverse_admin_users),
    ] 